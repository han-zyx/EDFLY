# version: '3.8'

# services:
#   zookeeper:
#     image: confluentinc/cp-zookeeper:7.0.0
#     container_name: zookeeper
#     ports:
#       - "2181:2181"
#     environment:
#       ZOOKEEPER_CLIENT_PORT: 2181
#     networks:
#       - mynetwork

#   kafka:
#     image: confluentinc/cp-kafka:7.0.0
#     container_name: kafka
#     ports:
#       - "9092:9092"
#     environment:
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#       KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#       KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#     depends_on:
#       - zookeeper
#     networks:
#       - mynetwork

#   flink-jobmanager:
#     image: apache/flink:1.13.6-scala_2.12-java11
#     container_name: flink-jobmanager
#     ports:
#       - "8081:8081"
#     command: jobmanager
#     environment:
#       - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
#     depends_on:
#       - kafka
#     networks:
#       - mynetwork

#   flink-taskmanager:
#     image: apache/flink:1.13.6-scala_2.12-java11
#     container_name: flink-taskmanager
#     depends_on:
#       - flink-jobmanager
#     command: taskmanager
#     environment:
#       - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
#     networks:
#       - mynetwork

# networks:
#   mynetwork:
#     driver: bridge




# version: '3.8'

# services:
#   zookeeper:
#     image: confluentinc/cp-zookeeper:7.1.0  # Updated version
#     container_name: zookeeper
#     ports:
#       - "2181:2181"
#     environment:
#       ZOOKEEPER_CLIENT_PORT: 2181
#     networks:
#       - mynetwork

#   kafka:
#     image: confluentinc/cp-kafka:7.1.0  # Updated version
#     container_name: kafka
#     ports:
#       - "9092:9092"
#     environment:
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#       KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#       KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#     depends_on:
#       - zookeeper
#     networks:
#       - mynetwork

#   flink-jobmanager:
#     image: apache/flink:1.17.0-scala_2.12-java11  # Updated version
#     container_name: flink-jobmanager
#     ports:
#       - "8081:8081"
#     command: jobmanager
#     environment:
#       - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
#     depends_on:
#       - kafka
#     networks:
#       - mynetwork

#   flink-taskmanager:
#     image: apache/flink:1.17.0-scala_2.12-java11  # Updated version
#     container_name: flink-taskmanager
#     depends_on:
#       - flink-jobmanager
#     command: taskmanager
#     environment:
#       - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
#     networks:
#       - mynetwork

# networks:
#   mynetwork:
#     driver: bridge




# version: '3'
# services:
#   zookeeper:
#     image: bitnami/zookeeper:3.7
#     container_name: zookeeper
#     ports:
#       - "2181:2181"
#     environment:
#       - ALLOW_ANONYMOUS_LOGIN=yes
#       - ZOO_PORT_NUMBER=2181
#     networks:
#       - mynetwork

#   kafka:
#     image: bitnami/kafka:2.8.0
#     container_name: kafka
#     ports:
#       - "9092:9092"
#     environment:
#       - KAFKA_BROKER_ID=1
#       - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
#       - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
#       - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
#       - ALLOW_PLAINTEXT_LISTENER=yes
#       - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
#     depends_on:
#       - zookeeper
#     networks:
#       - mynetwork

#   flink-jobmanager:
#     image: apache/flink:1.13.6-scala_2.12-java11
#     container_name: flink-jobmanager
#     ports:
#       - "8081:8081"
#     command: jobmanager
#     environment:
#       - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
#     depends_on:
#       - kafka
#     networks:
#       - mynetwork

#   flink-taskmanager:
#     image: apache/flink:1.13.6-scala_2.12-java11
#     container_name: flink-taskmanager
#     depends_on:
#       - flink-jobmanager
#     command: taskmanager
#     environment:
#       - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
#     networks:
#       - mynetwork

# networks:
#   mynetwork:
#     driver: bridge



version: '3'
services:
  zookeeper:
    image: bitnami/zookeeper:3.7
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_PORT_NUMBER=2181
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: bitnami/kafka:2.8.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      #- KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092

      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092

      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
      zookeeper:
        condition: service_healthy
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka-topic-creator:
    image: bitnami/kafka:2.8.0
    container_name: kafka-topic-creator
    command: >
      sh -c "sleep 10 && kafka-topics.sh --create --topic input-topic --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1"
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - mynetwork

  flink-jobmanager:
    image: apache/flink:1.13.6-scala_2.12-java11
    container_name: flink-jobmanager
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
    depends_on:
      - kafka
    volumes:
      - ./flink-yolov8-demo/target:/opt/flink/usrlib  # Mount the directory containing the JAR
    networks:
      - mynetwork

  flink-taskmanager:
    image: apache/flink:1.13.6-scala_2.12-java11
    container_name: flink-taskmanager
    depends_on:
      - flink-jobmanager
    command: taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
    networks:
      - mynetwork

  flink-job-submitter:
    image: apache/flink:1.13.6-scala_2.12-java11
    container_name: flink-job-submitter
    command: >
      sh -c "sleep 15 && flink run -c KafkaFlinkJsonIntegration /opt/flink/usrlib/flink-kafka-demo-1.0.jar"
    depends_on:
      - flink-jobmanager
      - kafka-topic-creator
    volumes:
      - ./flink-yolov8-demo/target:/opt/flink/usrlib  # Mount the JAR file
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge